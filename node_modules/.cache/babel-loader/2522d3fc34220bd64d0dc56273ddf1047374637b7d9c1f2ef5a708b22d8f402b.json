{"ast":null,"code":"var _jsxFileName = \"C:\\\\nailmall\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [dateTime, setDateTime] = useState(new Date());\n  const API_key = '207bfda7095044c9b3ffc980d10be7a7';\n  const city = 'ansan';\n  const weatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_key}&units=metric`;\n\n  // 날씨 정보 fetch\n  useEffect(() => {\n    fetch(weatherAPI).then(response => response.json()).then(data => setWeather(data)).catch(error => console.error('오류발생', error));\n  }, [weatherAPI]);\n\n  // 1초마다 날짜 및 시간 업데이트\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDateTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC624\\uB298\\uC758 \\uB0A0\\uC9DC : \", dateTime.toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC624\\uB298\\uC758 \\uC2DC\\uAC04 : \", dateTime.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB3C4\\uC2DC : \", weather.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC628\\uB3C4 : \", weather.main.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2B5\\uB3C4 : \", weather.main.humidity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC528 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"9tFUYL/cjk/5zJtAqgKP676PRQ0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","weather","setWeather","dateTime","setDateTime","Date","API_key","city","weatherAPI","fetch","then","response","json","data","catch","error","console","timer","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","toLocaleTimeString","name","main","temp","humidity","_c","$RefreshReg$"],"sources":["C:/nailmall/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/.scss'\r\n\r\nconst Home = () => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [dateTime, setDateTime] = useState(new Date());\r\n\r\n  const API_key = '207bfda7095044c9b3ffc980d10be7a7';\r\n  const city = 'ansan';\r\n  const weatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_key}&units=metric`;\r\n\r\n  // 날씨 정보 fetch\r\n  useEffect(() => {\r\n    fetch(weatherAPI)\r\n      .then(response => response.json())\r\n      .then(data => setWeather(data))\r\n      .catch(error => console.error('오류발생', error));\r\n  }, [weatherAPI]);\r\n\r\n  // 1초마다 날짜 및 시간 업데이트\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDateTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='page home'>\r\n      <h1>HOME</h1>\r\n      <p>오늘의 날짜 : {dateTime.toLocaleDateString()}</p>\r\n      <p>오늘의 시간 : {dateTime.toLocaleTimeString()}</p>\r\n      {weather ? (\r\n        <div>\r\n          <p>도시 : {weather.name}</p>\r\n          <p>온도 : {weather.main.temp}</p>\r\n          <p>습도 : {weather.main.humidity}</p>\r\n        </div>\r\n      ) : (\r\n        <p>날씨 정보를 불러오는 중...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
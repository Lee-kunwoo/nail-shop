{"ast":null,"code":"var _jsxFileName = \"C:\\\\nailmall\\\\src\\\\pages\\\\Address.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopLocation = () => {\n  _s();\n  const [address, setAddress] = useState('경기 안산시 상록구 용신로 381 신영빌딩'); // 네일샵 주소\n  const [coords, setCoords] = useState(null); // 좌표 정보\n\n  useEffect(() => {\n    const geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch(address, (result, status) => {\n      if (status === kakao.maps.services.Status.OK) {\n        const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n        setCoords(coords);\n      } else {\n        console.error('주소 검색 실패:', status);\n      }\n    });\n  }, [address]);\n  useEffect(() => {\n    if (coords) {\n      // coords를 이용하여 지도에 마커를 표시하는 코드 작성\n      // ...\n    }\n  }, [coords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC8FC\\uC18C: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopLocation, \"MwwrQ0iwHWN8PXbMQtMHqoUUnKE=\");\n_c = ShopLocation;\nexport default ShopLocation;\nvar _c;\n$RefreshReg$(_c, \"ShopLocation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ShopLocation","_s","address","setAddress","coords","setCoords","geocoder","kakao","maps","services","Geocoder","addressSearch","result","status","Status","OK","LatLng","y","x","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/nailmall/src/pages/Address.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ShopLocation = () => {\r\n  const [address, setAddress] = useState('경기 안산시 상록구 용신로 381 신영빌딩'); // 네일샵 주소\r\n  const [coords, setCoords] = useState(null); // 좌표 정보\r\n\r\n  useEffect(() => {\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    geocoder.addressSearch(address, (result, status) => {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n        setCoords(coords);\r\n      } else {\r\n        console.error('주소 검색 실패:', status);\r\n      }\r\n    });\r\n  }, [address]);\r\n\r\n  useEffect(() => {\r\n    if (coords) {\r\n      // coords를 이용하여 지도에 마커를 표시하는 코드 작성\r\n      // ...\r\n    }\r\n  }, [coords]);\r\n\r\n  return (\r\n    <div>\r\n      {/* 주소 정보 표시 */}\r\n      <p>주소: {address}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopLocation;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,yBAAyB,CAAC,CAAC,CAAC;EACnE,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAG,IAAIC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;IAEnDJ,QAAQ,CAACK,aAAa,CAACT,OAAO,EAAE,CAACU,MAAM,EAAEC,MAAM,KAAK;MAClD,IAAIA,MAAM,KAAKN,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACK,MAAM,CAACC,EAAE,EAAE;QAC5C,MAAMX,MAAM,GAAG,IAAIG,KAAK,CAACC,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC,CAAC,CAAC,CAACK,CAAC,EAAEL,MAAM,CAAC,CAAC,CAAC,CAACM,CAAC,CAAC;QAC9Db,SAAS,CAACD,MAAM,CAAC;MACnB,CAAC,MAAM;QACLe,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEP,MAAM,CAAC;MACpC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEbN,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,EAAE;MACV;MACA;IAAA;EAEJ,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAAsB,QAAA,eAEEtB,OAAA;MAAAsB,QAAA,GAAG,gBAAI,EAACnB,OAAO;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9BID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}